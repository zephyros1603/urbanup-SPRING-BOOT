2025-08-05 11:14:34 [main] INFO  c.z.urbanup.UrbanupApplication - Starting UrbanupApplication using Java 23.0.2 with PID 14355 (/Users/sanjanathyady/Desktop/urbanupMvp/urbanup/target/classes started by sanjanathyady in /Users/sanjanathyady/Desktop/urbanupMvp/urbanup)
2025-08-05 11:14:34 [main] DEBUG c.z.urbanup.UrbanupApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-05 11:14:34 [main] INFO  c.z.urbanup.UrbanupApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-05 11:14:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 11:14:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-05 11:14:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 78 ms. Found 9 JPA repository interfaces.
2025-08-05 11:14:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 11:14:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-05 11:14:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:14:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:14:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.NotificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:14:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:14:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:14:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:14:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:14:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:14:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:14:34 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-05 11:14:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-05 11:14:35 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-05 11:14:35 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-05 11:14:35 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-05 11:14:35 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 824 ms
2025-08-05 11:14:35 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-05 11:14:35 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-05 11:14:35 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-05 11:14:35 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-05 11:14:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-05 11:14:35 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@58b3eb1
2025-08-05 11:14:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-05 11:14:35 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-05 11:14:35 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 13.20
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-05 11:14:36 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-05 11:14:36 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 11:14:36 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-05 11:14:37 [main] DEBUG c.z.u.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-05 11:14:37 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-08-05 11:14:40 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-05 11:14:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-08-05 11:14:40 [main] INFO  c.z.urbanup.UrbanupApplication - Started UrbanupApplication in 6.712 seconds (process running for 6.882)
2025-08-05 11:17:18 [http-nio-8080-exec-6] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-05 11:17:18 [http-nio-8080-exec-6] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-05 11:17:18 [http-nio-8080-exec-6] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-05 11:17:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-08-05 11:17:18 [http-nio-8080-exec-6] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:17:18 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:17:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
2025-08-05 11:17:18 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 11:17:18 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:17:27 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 11:17:27 [http-nio-8080-exec-7] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:17:27 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:28:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 11:28:55 [http-nio-8080-exec-8] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:28:55 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:28:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 11:28:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 11:28:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 11:28:55 [http-nio-8080-exec-8] ERROR o.s.t.i.TransactionInterceptor - Application exception overridden by rollback exception
java.lang.IllegalArgumentException: Phone number already exists
	at com.zephyros.urbanup.service.UserService.registerUser(UserService.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.zephyros.urbanup.service.UserService$$SpringCGLIB$$0.registerUser(<generated>)
	at com.zephyros.urbanup.controller.AuthController.registerUser(AuthController.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.zephyros.urbanup.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:78)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-05 11:28:55 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-05 11:28:55 [http-nio-8080-exec-9] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:28:55 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:28:55 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-05 11:28:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:28:55 [http-nio-8080-exec-9] ERROR o.s.t.i.TransactionInterceptor - Application exception overridden by rollback exception
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with email: john.doe@example.com
	at com.zephyros.urbanup.security.UserDetailsServiceImpl.lambda$loadUserByUsername$0(UserDetailsServiceImpl.java:23)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.zephyros.urbanup.security.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.zephyros.urbanup.security.UserDetailsServiceImpl$$SpringCGLIB$$0.loadUserByUsername(<generated>)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:121)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:136)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at com.zephyros.urbanup.controller.AuthController.authenticateUser(AuthController.java:85)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.zephyros.urbanup.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:78)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-08-05 11:28:55 [http-nio-8080-exec-9] DEBUG o.s.s.a.DefaultAuthenticationEventPublisher - No event was found for the exception org.springframework.security.authentication.InternalAuthenticationServiceException
2025-08-05 11:28:55 [http-nio-8080-exec-9] DEBUG o.s.s.authentication.ProviderManager - Authentication service failed internally for user 'john.doe@example.com'
org.springframework.security.authentication.InternalAuthenticationServiceException: Unable to rollback against JDBC Connection
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:136)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:136)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at com.zephyros.urbanup.controller.AuthController.authenticateUser(AuthController.java:85)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.zephyros.urbanup.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:78)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.springframework.orm.jpa.JpaSystemException: Unable to rollback against JDBC Connection
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:348)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:256)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.JpaTransactionManager.doRollback(JpaTransactionManager.java:593)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:897)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.rollback(AbstractPlatformTransactionManager.java:866)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.completeTransactionAfterThrowing(TransactionAspectSupport.java:716)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:384)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.zephyros.urbanup.security.UserDetailsServiceImpl$$SpringCGLIB$$0.loadUserByUsername(<generated>)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:121)
	... 110 common frames omitted
Caused by: org.hibernate.TransactionException: Unable to rollback against JDBC Connection
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.rollback(AbstractLogicalConnectionImplementor.java:137)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.rollback(JdbcResourceLocalTransactionCoordinatorImpl.java:289)
	at org.hibernate.engine.transaction.internal.TransactionImpl.rollback(TransactionImpl.java:142)
	at org.springframework.orm.jpa.JpaTransactionManager.doRollback(JpaTransactionManager.java:589)
	... 119 common frames omitted
Caused by: org.postgresql.util.PSQLException: Cannot rollback when autoCommit is enabled.
	at org.postgresql.jdbc.PgConnection.rollback(PgConnection.java:1022)
	at com.zaxxer.hikari.pool.ProxyConnection.rollback(ProxyConnection.java:386)
	at com.zaxxer.hikari.pool.HikariProxyConnection.rollback(HikariProxyConnection.java)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.rollback(AbstractLogicalConnectionImplementor.java:127)
	... 122 common frames omitted
2025-08-05 11:28:55 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/search?searchTerm=john
2025-08-05 11:28:55 [http-nio-8080-exec-10] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:28:55 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:28:55 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/top-posters?minRating=4.0
2025-08-05 11:28:55 [http-nio-8080-exec-3] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:28:55 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:28:55 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/top-fulfillers?minRating=4.0
2025-08-05 11:28:55 [http-nio-8080-exec-5] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:28:55 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:28:55 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks
2025-08-05 11:28:55 [http-nio-8080-exec-6] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:28:55 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:28:55 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks/search?keyword=test
2025-08-05 11:28:55 [http-nio-8080-exec-8] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:28:55 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:28:55 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks/category/PERSONAL_ERRANDS
2025-08-05 11:28:55 [http-nio-8080-exec-10] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:28:55 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:28:55 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks/urgent
2025-08-05 11:28:55 [http-nio-8080-exec-3] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:28:55 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:31:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-05 11:31:45 [http-nio-8080-exec-5] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:31:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:31:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-05 11:31:45 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 11:31:45 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:34:17 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-05 11:34:19 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-05 11:34:19 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 11:34:19 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-05 11:34:19 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-05 11:37:07 [main] INFO  c.z.urbanup.UrbanupApplication - Starting UrbanupApplication using Java 24.0.1 with PID 17459 (/Users/sanjanathyady/Desktop/urbanupMvp/urbanup/target/classes started by sanjanathyady in /Users/sanjanathyady/Desktop/urbanupMvp/urbanup)
2025-08-05 11:37:07 [main] DEBUG c.z.urbanup.UrbanupApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-05 11:37:07 [main] INFO  c.z.urbanup.UrbanupApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-05 11:37:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 11:37:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-05 11:37:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 80 ms. Found 9 JPA repository interfaces.
2025-08-05 11:37:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 11:37:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-05 11:37:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:37:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:37:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.NotificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:37:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:37:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:37:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:37:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:37:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:37:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:37:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-05 11:37:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-05 11:37:08 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-05 11:37:08 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-05 11:37:08 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-05 11:37:08 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 810 ms
2025-08-05 11:37:08 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-05 11:37:08 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-05 11:37:08 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-05 11:37:08 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-05 11:37:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-05 11:37:09 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1d9bd1d6
2025-08-05 11:37:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-05 11:37:09 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-05 11:37:09 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 13.20
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-05 11:37:09 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-05 11:37:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 11:37:10 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-05 11:37:11 [main] DEBUG c.z.u.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-05 11:37:11 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-08-05 11:37:13 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-05 11:37:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-08-05 11:37:14 [main] INFO  c.z.urbanup.UrbanupApplication - Started UrbanupApplication in 6.577 seconds (process running for 6.73)
2025-08-05 11:38:41 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-05 11:38:41 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-05 11:38:41 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-05 11:38:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-05 11:38:41 [http-nio-8080-exec-1] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:38:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:38:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-05 11:38:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 11:38:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 11:38:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:39:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 11:39:10 [http-nio-8080-exec-2] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:39:10 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:39:10 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 11:39:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 11:39:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 11:39:10 [http-nio-8080-exec-2] ERROR o.s.t.i.TransactionInterceptor - Application exception overridden by rollback exception
java.lang.IllegalArgumentException: Phone number already exists
	at com.zephyros.urbanup.service.UserService.registerUser(UserService.java:46)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.zephyros.urbanup.service.UserService$$SpringCGLIB$$0.registerUser(<generated>)
	at com.zephyros.urbanup.controller.AuthController.registerUser(AuthController.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.zephyros.urbanup.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:78)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-05 11:40:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 11:40:15 [http-nio-8080-exec-3] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:40:15 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:40:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 11:40:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 11:40:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 11:40:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.User */insert 
    into
        users (account_created_from, created_at, email, fcm_token, first_name, is_active, is_email_verified, is_phone_verified, last_login, last_name, password, phone_number, profile_picture_url, rating_as_fulfiller, rating_as_poster, ratings_as_fulfiller_count, ratings_as_post_count, theme, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:40:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.UserProfile */insert 
    into
        user_profiles (address_line1, address_line2, address_verified, availability_status, background_check_status, bio, city, country, created_at, date_of_birth, email_verified, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, gender, government_id_number, government_id_type, government_id_verified, home_latitude, home_longitude, kyc_status, last_location_update, notification_preferences, phone_verified, postal_code, preferred_radius_km, privacy_settings, state, tasks_completed, tasks_posted, total_earnings, total_spent, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:40:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:42:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 11:42:06 [http-nio-8080-exec-4] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:42:06 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:42:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 11:42:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 11:42:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 11:42:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.User */insert 
    into
        users (account_created_from, created_at, email, fcm_token, first_name, is_active, is_email_verified, is_phone_verified, last_login, last_name, password, phone_number, profile_picture_url, rating_as_fulfiller, rating_as_poster, ratings_as_fulfiller_count, ratings_as_post_count, theme, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:42:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.UserProfile */insert 
    into
        user_profiles (address_line1, address_line2, address_verified, availability_status, background_check_status, bio, city, country, created_at, date_of_birth, email_verified, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, gender, government_id_number, government_id_type, government_id_verified, home_latitude, home_longitude, kyc_status, last_location_update, notification_preferences, phone_verified, postal_code, preferred_radius_km, privacy_settings, state, tasks_completed, tasks_posted, total_earnings, total_spent, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:42:06 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:43:12 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-05 11:43:12 [http-nio-8080-exec-5] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:43:12 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:43:12 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-05 11:43:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:43:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:43:13 [http-nio-8080-exec-5] DEBUG o.s.s.a.DefaultAuthenticationEventPublisher - No event was found for the exception org.springframework.security.authentication.InternalAuthenticationServiceException
2025-08-05 11:43:13 [http-nio-8080-exec-5] DEBUG o.s.s.authentication.ProviderManager - Authentication service failed internally for user 'newuser@example.com'
org.springframework.security.authentication.InternalAuthenticationServiceException: Unable to commit against JDBC Connection
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:136)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:136)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at com.zephyros.urbanup.controller.AuthController.authenticateUser(AuthController.java:85)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.zephyros.urbanup.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:78)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.springframework.orm.jpa.JpaSystemException: Unable to commit against JDBC Connection
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:348)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:256)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.zephyros.urbanup.security.UserDetailsServiceImpl$$SpringCGLIB$$0.loadUserByUsername(<generated>)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:121)
	... 110 common frames omitted
Caused by: org.hibernate.TransactionException: Unable to commit against JDBC Connection
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:268)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 119 common frames omitted
Caused by: org.postgresql.util.PSQLException: Cannot commit when autoCommit is enabled.
	at org.postgresql.jdbc.PgConnection.commit(PgConnection.java:1001)
	at com.zaxxer.hikari.pool.ProxyConnection.commit(ProxyConnection.java:378)
	at com.zaxxer.hikari.pool.HikariProxyConnection.commit(HikariProxyConnection.java)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:87)
	... 122 common frames omitted
2025-08-05 11:43:51 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-05 11:43:51 [http-nio-8080-exec-6] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:43:51 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:43:51 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-05 11:43:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:43:51 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:43:51 [http-nio-8080-exec-6] DEBUG o.s.s.a.DefaultAuthenticationEventPublisher - No event was found for the exception org.springframework.security.authentication.InternalAuthenticationServiceException
2025-08-05 11:43:51 [http-nio-8080-exec-6] DEBUG o.s.s.authentication.ProviderManager - Authentication service failed internally for user 'test@example.com'
org.springframework.security.authentication.InternalAuthenticationServiceException: Unable to commit against JDBC Connection
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:136)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:136)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at com.zephyros.urbanup.controller.AuthController.authenticateUser(AuthController.java:85)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.zephyros.urbanup.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:78)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.springframework.orm.jpa.JpaSystemException: Unable to commit against JDBC Connection
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:348)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:256)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.zephyros.urbanup.security.UserDetailsServiceImpl$$SpringCGLIB$$0.loadUserByUsername(<generated>)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:121)
	... 110 common frames omitted
Caused by: org.hibernate.TransactionException: Unable to commit against JDBC Connection
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:268)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 119 common frames omitted
Caused by: org.postgresql.util.PSQLException: Cannot commit when autoCommit is enabled.
	at org.postgresql.jdbc.PgConnection.commit(PgConnection.java:1001)
	at com.zaxxer.hikari.pool.ProxyConnection.commit(ProxyConnection.java:378)
	at com.zaxxer.hikari.pool.HikariProxyConnection.commit(HikariProxyConnection.java)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:87)
	... 122 common frames omitted
2025-08-05 11:44:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-05 11:44:09 [http-nio-8080-exec-7] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:44:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:44:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-05 11:44:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 11:44:09 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 11:44:09 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:44:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-08-05 11:44:09 [http-nio-8080-exec-1] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:44:09 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:44:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
2025-08-05 11:44:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 11:44:09 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 11:44:09 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:44:09 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 11:44:09 [http-nio-8080-exec-3] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:44:09 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:44:09 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 11:44:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 11:44:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 11:44:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.User */insert 
    into
        users (account_created_from, created_at, email, fcm_token, first_name, is_active, is_email_verified, is_phone_verified, last_login, last_name, password, phone_number, profile_picture_url, rating_as_fulfiller, rating_as_poster, ratings_as_fulfiller_count, ratings_as_post_count, theme, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:44:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.UserProfile */insert 
    into
        user_profiles (address_line1, address_line2, address_verified, availability_status, background_check_status, bio, city, country, created_at, date_of_birth, email_verified, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, gender, government_id_number, government_id_type, government_id_verified, home_latitude, home_longitude, kyc_status, last_location_update, notification_preferences, phone_verified, postal_code, preferred_radius_km, privacy_settings, state, tasks_completed, tasks_posted, total_earnings, total_spent, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:44:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:44:10 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 11:44:10 [http-nio-8080-exec-4] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:44:10 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:44:10 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 11:44:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 11:44:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 11:44:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.User */insert 
    into
        users (account_created_from, created_at, email, fcm_token, first_name, is_active, is_email_verified, is_phone_verified, last_login, last_name, password, phone_number, profile_picture_url, rating_as_fulfiller, rating_as_poster, ratings_as_fulfiller_count, ratings_as_post_count, theme, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:44:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.UserProfile */insert 
    into
        user_profiles (address_line1, address_line2, address_verified, availability_status, background_check_status, bio, city, country, created_at, date_of_birth, email_verified, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, gender, government_id_number, government_id_type, government_id_verified, home_latitude, home_longitude, kyc_status, last_location_update, notification_preferences, phone_verified, postal_code, preferred_radius_km, privacy_settings, state, tasks_completed, tasks_posted, total_earnings, total_spent, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:44:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:44:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-05 11:44:10 [http-nio-8080-exec-5] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:44:10 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:44:10 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-05 11:44:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:44:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:44:10 [http-nio-8080-exec-5] DEBUG o.s.s.a.DefaultAuthenticationEventPublisher - No event was found for the exception org.springframework.security.authentication.InternalAuthenticationServiceException
2025-08-05 11:44:10 [http-nio-8080-exec-5] DEBUG o.s.s.authentication.ProviderManager - Authentication service failed internally for user 'testuser1754374450@example.com'
org.springframework.security.authentication.InternalAuthenticationServiceException: Unable to commit against JDBC Connection
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:136)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:136)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at com.zephyros.urbanup.controller.AuthController.authenticateUser(AuthController.java:85)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.zephyros.urbanup.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:78)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.springframework.orm.jpa.JpaSystemException: Unable to commit against JDBC Connection
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:348)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:256)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:795)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:758)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:698)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:416)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.zephyros.urbanup.security.UserDetailsServiceImpl$$SpringCGLIB$$0.loadUserByUsername(<generated>)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:121)
	... 110 common frames omitted
Caused by: org.hibernate.TransactionException: Unable to commit against JDBC Connection
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:97)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:268)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 119 common frames omitted
Caused by: org.postgresql.util.PSQLException: Cannot commit when autoCommit is enabled.
	at org.postgresql.jdbc.PgConnection.commit(PgConnection.java:1001)
	at com.zaxxer.hikari.pool.ProxyConnection.commit(ProxyConnection.java:378)
	at com.zaxxer.hikari.pool.HikariProxyConnection.commit(HikariProxyConnection.java)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:87)
	... 122 common frames omitted
2025-08-05 11:45:50 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-05 11:45:52 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-05 11:45:52 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 11:45:52 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-05 11:45:52 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-05 11:46:05 [main] INFO  c.z.urbanup.UrbanupApplication - Starting UrbanupApplication using Java 24.0.1 with PID 21041 (/Users/sanjanathyady/Desktop/urbanupMvp/urbanup/target/classes started by sanjanathyady in /Users/sanjanathyady/Desktop/urbanupMvp/urbanup)
2025-08-05 11:46:05 [main] DEBUG c.z.urbanup.UrbanupApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-05 11:46:05 [main] INFO  c.z.urbanup.UrbanupApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-05 11:46:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 11:46:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-05 11:46:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75 ms. Found 9 JPA repository interfaces.
2025-08-05 11:46:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 11:46:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-05 11:46:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:46:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:46:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.NotificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:46:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:46:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:46:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:46:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:46:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:46:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:46:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-05 11:46:05 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-05 11:46:05 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-05 11:46:05 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-05 11:46:05 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-05 11:46:05 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 756 ms
2025-08-05 11:46:06 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-05 11:46:06 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-05 11:46:06 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-05 11:46:06 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-05 11:46:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-05 11:46:06 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7544260a
2025-08-05 11:46:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-05 11:46:06 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-05 11:46:06 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 13.20
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-05 11:46:06 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-05 11:46:06 [main] INFO  o.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3958e148] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2025-08-05 11:46:07 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 11:46:07 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-05 11:46:08 [main] DEBUG c.z.u.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-05 11:46:08 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-08-05 11:46:10 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-05 11:46:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-08-05 11:46:11 [main] INFO  c.z.urbanup.UrbanupApplication - Started UrbanupApplication in 6.235 seconds (process running for 6.379)
2025-08-05 11:46:33 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-05 11:46:33 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-05 11:46:33 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2025-08-05 11:46:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 11:46:33 [http-nio-8080-exec-1] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:46:33 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:46:33 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 11:46:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 11:46:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 11:46:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.User */insert 
    into
        users (account_created_from, created_at, email, fcm_token, first_name, is_active, is_email_verified, is_phone_verified, last_login, last_name, password, phone_number, profile_picture_url, rating_as_fulfiller, rating_as_poster, ratings_as_fulfiller_count, ratings_as_post_count, theme, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:46:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.UserProfile */insert 
    into
        user_profiles (address_line1, address_line2, address_verified, availability_status, background_check_status, bio, city, country, created_at, date_of_birth, email_verified, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, gender, government_id_number, government_id_type, government_id_verified, home_latitude, home_longitude, kyc_status, last_location_update, notification_preferences, phone_verified, postal_code, preferred_radius_km, privacy_settings, state, tasks_completed, tasks_posted, total_earnings, total_spent, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:46:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:46:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-05 11:46:43 [http-nio-8080-exec-3] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:46:43 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:46:43 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-05 11:46:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:46:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:46:43 [http-nio-8080-exec-3] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Failed to authenticate since user account is disabled
2025-08-05 11:46:43 [http-nio-8080-exec-3] DEBUG o.s.s.authentication.ProviderManager - Authentication failed for user 'testfix@example.com' since their account status is User is disabled
org.springframework.security.authentication.DisabledException: User is disabled
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider$DefaultPreAuthenticationChecks.check(AbstractUserDetailsAuthenticationProvider.java:334)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:149)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at com.zephyros.urbanup.controller.AuthController.authenticateUser(AuthController.java:85)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:125)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.zephyros.urbanup.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:78)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.ServletRequestPathFilter.doFilter(ServletRequestPathFilter.java:52)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebSecurityConfiguration.java:319)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$4(HandlerMappingIntrospector.java:267)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:240)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-05 11:48:07 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-05 11:48:09 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-05 11:48:09 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 11:48:09 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-05 11:48:09 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-05 11:48:24 [main] INFO  c.z.urbanup.UrbanupApplication - Starting UrbanupApplication using Java 24.0.1 with PID 22557 (/Users/sanjanathyady/Desktop/urbanupMvp/urbanup/target/classes started by sanjanathyady in /Users/sanjanathyady/Desktop/urbanupMvp/urbanup)
2025-08-05 11:48:24 [main] DEBUG c.z.urbanup.UrbanupApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-05 11:48:24 [main] INFO  c.z.urbanup.UrbanupApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-05 11:48:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 11:48:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-05 11:48:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 80 ms. Found 9 JPA repository interfaces.
2025-08-05 11:48:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 11:48:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-05 11:48:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:48:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:48:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.NotificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:48:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:48:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:48:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:48:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:48:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:48:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:48:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-05 11:48:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-05 11:48:25 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-05 11:48:25 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-05 11:48:25 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-05 11:48:25 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 798 ms
2025-08-05 11:48:25 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-05 11:48:25 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-05 11:48:25 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-05 11:48:25 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-05 11:48:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-05 11:48:25 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2932e15f
2025-08-05 11:48:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-05 11:48:25 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-05 11:48:25 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 13.20
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-05 11:48:26 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-05 11:48:26 [main] INFO  o.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3958e148] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2025-08-05 11:48:26 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 11:48:26 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-05 11:48:27 [main] DEBUG c.z.u.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-05 11:48:27 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-08-05 11:48:29 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-05 11:48:30 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-08-05 11:48:30 [main] INFO  c.z.urbanup.UrbanupApplication - Started UrbanupApplication in 6.377 seconds (process running for 6.524)
2025-08-05 11:48:51 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-05 11:48:51 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-05 11:48:51 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-05 11:48:51 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-05 11:48:51 [http-nio-8080-exec-1] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:48:52 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:48:52 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-05 11:48:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:48:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:48:52 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-08-05 11:48:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:48:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:48:52 [http-nio-8080-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2025-08-05 11:48:52 [http-nio-8080-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2025-08-05 11:49:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-05 11:49:39 [http-nio-8080-exec-3] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:49:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:49:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-05 11:49:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 11:49:39 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 11:49:39 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:49:39 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-08-05 11:49:39 [http-nio-8080-exec-7] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:49:39 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:49:39 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
2025-08-05 11:49:39 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 11:49:39 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 11:49:39 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:49:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 11:49:39 [http-nio-8080-exec-9] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:49:39 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:49:39 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 11:49:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 11:49:39 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 11:49:39 [http-nio-8080-exec-10] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:49:39 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:49:39 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 11:49:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 11:49:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 11:49:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.User */insert 
    into
        users (account_created_from, created_at, email, fcm_token, first_name, is_active, is_email_verified, is_phone_verified, last_login, last_name, password, phone_number, profile_picture_url, rating_as_fulfiller, rating_as_poster, ratings_as_fulfiller_count, ratings_as_post_count, theme, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:49:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.UserProfile */insert 
    into
        user_profiles (address_line1, address_line2, address_verified, availability_status, background_check_status, bio, city, country, created_at, date_of_birth, email_verified, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, gender, government_id_number, government_id_type, government_id_verified, home_latitude, home_longitude, kyc_status, last_location_update, notification_preferences, phone_verified, postal_code, preferred_radius_km, privacy_settings, state, tasks_completed, tasks_posted, total_earnings, total_spent, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:49:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:49:39 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-05 11:49:39 [http-nio-8080-exec-2] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:49:39 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:49:39 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-05 11:49:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:49:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:49:39 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-08-05 11:49:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:49:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:49:39 [http-nio-8080-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2025-08-05 11:49:39 [http-nio-8080-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2025-08-05 11:52:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-05 11:52:59 [http-nio-8080-exec-6] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:52:59 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:52:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-05 11:52:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 11:52:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 11:52:59 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:52:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-08-05 11:52:59 [http-nio-8080-exec-9] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:52:59 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:52:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
2025-08-05 11:52:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 11:52:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 11:52:59 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:52:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 11:52:59 [http-nio-8080-exec-1] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:52:59 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:52:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 11:52:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 11:52:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 11:52:59 [http-nio-8080-exec-2] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:52:59 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:52:59 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 11:52:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 11:52:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 11:53:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.User */insert 
    into
        users (account_created_from, created_at, email, fcm_token, first_name, is_active, is_email_verified, is_phone_verified, last_login, last_name, password, phone_number, profile_picture_url, rating_as_fulfiller, rating_as_poster, ratings_as_fulfiller_count, ratings_as_post_count, theme, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:53:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.UserProfile */insert 
    into
        user_profiles (address_line1, address_line2, address_verified, availability_status, background_check_status, bio, city, country, created_at, date_of_birth, email_verified, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, gender, government_id_number, government_id_type, government_id_verified, home_latitude, home_longitude, kyc_status, last_location_update, notification_preferences, phone_verified, postal_code, preferred_radius_km, privacy_settings, state, tasks_completed, tasks_posted, total_earnings, total_spent, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:53:00 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:53:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-05 11:53:00 [http-nio-8080-exec-4] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:53:00 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:53:00 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-05 11:53:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:53:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:53:00 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-08-05 11:53:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:53:00 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:53:00 [http-nio-8080-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2025-08-05 11:53:00 [http-nio-8080-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2025-08-05 11:54:33 [main] INFO  c.z.urbanup.UrbanupApplication - Starting UrbanupApplication using Java 24.0.1 with PID 23857 (/Users/sanjanathyady/Desktop/urbanupMvp/urbanup/target/classes started by sanjanathyady in /Users/sanjanathyady/Desktop/urbanupMvp/urbanup)
2025-08-05 11:54:33 [main] DEBUG c.z.urbanup.UrbanupApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-05 11:54:33 [main] INFO  c.z.urbanup.UrbanupApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-05 11:54:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 11:54:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-05 11:54:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 9 JPA repository interfaces.
2025-08-05 11:54:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 11:54:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-05 11:54:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:54:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:54:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.NotificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:54:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:54:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:54:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:54:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:54:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:54:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:54:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-05 11:54:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-05 11:54:34 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-05 11:54:34 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-05 11:54:34 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-05 11:54:34 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 812 ms
2025-08-05 11:54:34 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-05 11:54:34 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-05 11:54:34 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-05 11:54:34 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-05 11:54:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-05 11:54:34 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2932e15f
2025-08-05 11:54:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-05 11:54:34 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-05 11:54:34 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 13.20
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-05 11:54:35 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-05 11:54:35 [main] INFO  o.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2d6cbbdb] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2025-08-05 11:54:35 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 11:54:36 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-05 11:54:36 [main] DEBUG c.z.u.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-05 11:54:36 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-08-05 11:54:39 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-05 11:54:39 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-08-05 11:54:39 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 11:54:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-05 11:54:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-05 11:54:39 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-05 11:54:39 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-08-05 11:55:17 [main] INFO  c.z.urbanup.UrbanupApplication - Starting UrbanupApplication using Java 24.0.1 with PID 24631 (/Users/sanjanathyady/Desktop/urbanupMvp/urbanup/target/classes started by sanjanathyady in /Users/sanjanathyady/Desktop/urbanupMvp/urbanup)
2025-08-05 11:55:17 [main] DEBUG c.z.urbanup.UrbanupApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-05 11:55:17 [main] INFO  c.z.urbanup.UrbanupApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-05 11:55:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 11:55:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-05 11:55:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 9 JPA repository interfaces.
2025-08-05 11:55:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 11:55:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-05 11:55:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:55:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:55:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.NotificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:55:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:55:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:55:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:55:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:55:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:55:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 11:55:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-05 11:55:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-05 11:55:18 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-05 11:55:18 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-05 11:55:18 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-05 11:55:18 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 807 ms
2025-08-05 11:55:18 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-05 11:55:18 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-05 11:55:18 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-05 11:55:18 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-05 11:55:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-05 11:55:18 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7544260a
2025-08-05 11:55:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-05 11:55:18 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-05 11:55:18 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 13.20
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-05 11:55:19 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-05 11:55:19 [main] INFO  o.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@51a65f56] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2025-08-05 11:55:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 11:55:20 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-05 11:55:21 [main] DEBUG c.z.u.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-05 11:55:21 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-08-05 11:55:23 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-05 11:55:23 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-08-05 11:55:23 [main] INFO  c.z.urbanup.UrbanupApplication - Started UrbanupApplication in 6.236 seconds (process running for 6.385)
2025-08-05 11:56:14 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-05 11:56:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-05 11:56:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-05 11:56:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-05 11:56:14 [http-nio-8080-exec-1] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:56:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:56:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-05 11:56:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 11:56:14 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 11:56:14 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:56:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-08-05 11:56:14 [http-nio-8080-exec-4] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:56:14 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:56:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
2025-08-05 11:56:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 11:56:14 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 11:56:14 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:56:14 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 11:56:14 [http-nio-8080-exec-6] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:56:14 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:56:14 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 11:56:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 11:56:14 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 11:56:14 [http-nio-8080-exec-7] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:56:14 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:56:14 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 11:56:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 11:56:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 11:56:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.User */insert 
    into
        users (account_created_from, created_at, email, fcm_token, first_name, is_active, is_email_verified, is_phone_verified, last_login, last_name, password, phone_number, profile_picture_url, rating_as_fulfiller, rating_as_poster, ratings_as_fulfiller_count, ratings_as_post_count, theme, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:56:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.UserProfile */insert 
    into
        user_profiles (address_line1, address_line2, address_verified, availability_status, background_check_status, bio, city, country, created_at, date_of_birth, email_verified, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, gender, government_id_number, government_id_type, government_id_verified, home_latitude, home_longitude, kyc_status, last_location_update, notification_preferences, phone_verified, postal_code, preferred_radius_km, privacy_settings, state, tasks_completed, tasks_posted, total_earnings, total_spent, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:56:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 11:56:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-05 11:56:15 [http-nio-8080-exec-9] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 11:56:15 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:56:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-05 11:56:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:56:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-9] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-08-05 11:56:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:56:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-9] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: failed to lazily initialize a collection of role: com.zephyros.urbanup.model.UserProfile.skills: could not initialize proxy - no Session]
2025-08-05 11:56:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /error
2025-08-05 11:56:15 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /error
2025-08-05 11:56:15 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:56:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/10
2025-08-05 11:56:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:56:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/10
2025-08-05 11:56:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 11:56:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-10] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: failed to lazily initialize a collection of role: com.zephyros.urbanup.model.UserProfile.skills: could not initialize proxy - no Session]
2025-08-05 11:56:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 11:56:15 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 11:56:15 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:56:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /users/10
2025-08-05 11:56:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:56:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /users/10
2025-08-05 11:56:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 11:56:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 11:56:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.zephyros.urbanup.model.User */update users 
    set
        account_created_from=?,
        created_at=?,
        email=?,
        fcm_token=?,
        first_name=?,
        is_active=?,
        is_email_verified=?,
        is_phone_verified=?,
        last_login=?,
        last_name=?,
        password=?,
        phone_number=?,
        profile_picture_url=?,
        rating_as_fulfiller=?,
        rating_as_poster=?,
        ratings_as_fulfiller_count=?,
        ratings_as_post_count=?,
        theme=?,
        updated_at=? 
    where
        id=?
2025-08-05 11:56:15 [http-nio-8080-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: failed to lazily initialize a collection of role: com.zephyros.urbanup.model.UserProfile.skills: could not initialize proxy - no Session]
2025-08-05 11:56:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /error
2025-08-05 11:56:15 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /error
2025-08-05 11:56:15 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:56:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/search?searchTerm=test
2025-08-05 11:56:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:56:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/search?searchTerm=test
2025-08-05 11:56:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        LOWER(u.firstName) LIKE LOWER(CONCAT('%', :searchTerm, '%')) 
        OR LOWER(u.lastName) LIKE LOWER(CONCAT('%', :searchTerm, '%')) 
        OR LOWER(u.email) LIKE LOWER(CONCAT('%', :searchTerm, '%')) */ select
            u1_0.id,
            u1_0.account_created_from,
            u1_0.created_at,
            u1_0.email,
            u1_0.fcm_token,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.is_email_verified,
            u1_0.is_phone_verified,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password,
            u1_0.phone_number,
            u1_0.profile_picture_url,
            u1_0.rating_as_fulfiller,
            u1_0.rating_as_poster,
            u1_0.ratings_as_fulfiller_count,
            u1_0.ratings_as_post_count,
            u1_0.theme,
            u1_0.updated_at 
        from
            users u1_0 
        where
            lower(u1_0.first_name) like lower(('%'||?||'%')) escape '' 
            or lower(u1_0.last_name) like lower(('%'||?||'%')) escape '' 
            or lower(u1_0.email) like lower(('%'||?||'%')) escape ''
2025-08-05 11:56:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: failed to lazily initialize a collection of role: com.zephyros.urbanup.model.UserProfile.skills: could not initialize proxy - no Session]
2025-08-05 11:56:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error?searchTerm=test
2025-08-05 11:56:15 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error?searchTerm=test
2025-08-05 11:56:15 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 11:56:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/top-posters?minRating=4.0
2025-08-05 11:56:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:56:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/top-posters?minRating=4.0
2025-08-05 11:56:15 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.ratingAsPoster >= :minRating 
    ORDER BY
        u.ratingAsPoster DESC */ select
            u1_0.id,
            u1_0.account_created_from,
            u1_0.created_at,
            u1_0.email,
            u1_0.fcm_token,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.is_email_verified,
            u1_0.is_phone_verified,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password,
            u1_0.phone_number,
            u1_0.profile_picture_url,
            u1_0.rating_as_fulfiller,
            u1_0.rating_as_poster,
            u1_0.ratings_as_fulfiller_count,
            u1_0.ratings_as_post_count,
            u1_0.theme,
            u1_0.updated_at 
        from
            users u1_0 
        where
            u1_0.rating_as_poster>=? 
        order by
            u1_0.rating_as_poster desc
2025-08-05 11:56:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /tasks
2025-08-05 11:56:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:56:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /tasks
2025-08-05 11:56:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 11:56:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks
2025-08-05 11:56:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:56:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /tasks
2025-08-05 11:56:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.accepted_at,
        t1_0.address_details,
        t1_0.category,
        t1_0.completed_at,
        t1_0.confirmed_at,
        t1_0.created_at,
        t1_0.deadline,
        t1_0.description,
        t1_0.estimated_duration_hours,
        t1_0.fulfiller_id,
        t1_0.is_urgent,
        t1_0.latitude,
        t1_0.location,
        t1_0.longitude,
        t1_0.poster_id,
        t1_0.price,
        t1_0.pricing_type,
        t1_0.requires_verification,
        t1_0.special_instructions,
        t1_0.started_at,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at 
    from
        tasks t1_0
2025-08-05 11:56:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks/search?keyword=grocery
2025-08-05 11:56:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 11:56:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 11:56:15 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /tasks/search?keyword=grocery
2025-08-05 11:56:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.accepted_at,
        t1_0.address_details,
        t1_0.category,
        t1_0.completed_at,
        t1_0.confirmed_at,
        t1_0.created_at,
        t1_0.deadline,
        t1_0.description,
        t1_0.estimated_duration_hours,
        t1_0.fulfiller_id,
        t1_0.is_urgent,
        t1_0.latitude,
        t1_0.location,
        t1_0.longitude,
        t1_0.poster_id,
        t1_0.price,
        t1_0.pricing_type,
        t1_0.requires_verification,
        t1_0.special_instructions,
        t1_0.started_at,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.status=?
2025-08-05 12:00:01 [main] INFO  c.z.urbanup.UrbanupApplication - Starting UrbanupApplication using Java 24.0.1 with PID 25719 (/Users/sanjanathyady/Desktop/urbanupMvp/urbanup/target/classes started by sanjanathyady in /Users/sanjanathyady/Desktop/urbanupMvp/urbanup)
2025-08-05 12:00:01 [main] DEBUG c.z.urbanup.UrbanupApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-05 12:00:01 [main] INFO  c.z.urbanup.UrbanupApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-05 12:00:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 12:00:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-05 12:00:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 79 ms. Found 9 JPA repository interfaces.
2025-08-05 12:00:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 12:00:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-05 12:00:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:00:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:00:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.NotificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:00:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:00:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:00:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:00:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:00:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:00:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:00:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2025-08-05 12:00:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-05 12:00:02 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-05 12:00:02 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-05 12:00:02 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-05 12:00:02 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 802 ms
2025-08-05 12:00:02 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-05 12:00:02 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-05 12:00:02 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-05 12:00:02 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-05 12:00:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-05 12:00:02 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7544260a
2025-08-05 12:00:02 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-05 12:00:03 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-05 12:00:03 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 13.20
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-05 12:00:03 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-05 12:00:03 [main] INFO  o.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@56a6aadb] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2025-08-05 12:00:04 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 12:00:04 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-05 12:00:05 [main] DEBUG c.z.u.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-05 12:00:05 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-08-05 12:00:07 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-05 12:00:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-08-05 12:00:07 [main] INFO  c.z.urbanup.UrbanupApplication - Started UrbanupApplication in 6.317 seconds (process running for 6.467)
2025-08-05 12:00:40 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-05 12:00:40 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-05 12:00:40 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2025-08-05 12:00:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-05 12:00:40 [http-nio-8080-exec-1] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:00:40 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:00:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-05 12:00:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 12:00:40 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 12:00:40 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:00:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-08-05 12:00:40 [http-nio-8080-exec-4] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:00:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:00:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
2025-08-05 12:00:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 12:00:40 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 12:00:40 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:00:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 12:00:40 [http-nio-8080-exec-6] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:00:40 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:00:40 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 12:00:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 12:00:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 12:00:41 [http-nio-8080-exec-7] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:00:41 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:00:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 12:00:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 12:00:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 12:00:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.User */insert 
    into
        users (account_created_from, created_at, email, fcm_token, first_name, is_active, is_email_verified, is_phone_verified, last_login, last_name, password, phone_number, profile_picture_url, rating_as_fulfiller, rating_as_poster, ratings_as_fulfiller_count, ratings_as_post_count, theme, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:00:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.UserProfile */insert 
    into
        user_profiles (address_line1, address_line2, address_verified, availability_status, background_check_status, bio, city, country, created_at, date_of_birth, email_verified, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, gender, government_id_number, government_id_type, government_id_verified, home_latitude, home_longitude, kyc_status, last_location_update, notification_preferences, phone_verified, postal_code, preferred_radius_km, privacy_settings, state, tasks_completed, tasks_posted, total_earnings, total_spent, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:00:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:00:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-05 12:00:41 [http-nio-8080-exec-9] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:00:41 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:00:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-05 12:00:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:00:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-9] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-08-05 12:00:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:00:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/11
2025-08-05 12:00:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:00:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/11
2025-08-05 12:00:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:00:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /users/11
2025-08-05 12:00:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:00:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /users/11
2025-08-05 12:00:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:00:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 12:00:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/search?searchTerm=test
2025-08-05 12:00:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:00:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/search?searchTerm=test
2025-08-05 12:00:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        LOWER(u.firstName) LIKE LOWER(CONCAT('%', :searchTerm, '%')) 
        OR LOWER(u.lastName) LIKE LOWER(CONCAT('%', :searchTerm, '%')) 
        OR LOWER(u.email) LIKE LOWER(CONCAT('%', :searchTerm, '%')) */ select
            u1_0.id,
            u1_0.account_created_from,
            u1_0.created_at,
            u1_0.email,
            u1_0.fcm_token,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.is_email_verified,
            u1_0.is_phone_verified,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password,
            u1_0.phone_number,
            u1_0.profile_picture_url,
            u1_0.rating_as_fulfiller,
            u1_0.rating_as_poster,
            u1_0.ratings_as_fulfiller_count,
            u1_0.ratings_as_post_count,
            u1_0.theme,
            u1_0.updated_at 
        from
            users u1_0 
        where
            lower(u1_0.first_name) like lower(('%'||?||'%')) escape '' 
            or lower(u1_0.last_name) like lower(('%'||?||'%')) escape '' 
            or lower(u1_0.email) like lower(('%'||?||'%')) escape ''
2025-08-05 12:00:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/top-posters?minRating=4.0
2025-08-05 12:00:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:00:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/top-posters?minRating=4.0
2025-08-05 12:00:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.ratingAsPoster >= :minRating 
    ORDER BY
        u.ratingAsPoster DESC */ select
            u1_0.id,
            u1_0.account_created_from,
            u1_0.created_at,
            u1_0.email,
            u1_0.fcm_token,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.is_email_verified,
            u1_0.is_phone_verified,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password,
            u1_0.phone_number,
            u1_0.profile_picture_url,
            u1_0.rating_as_fulfiller,
            u1_0.rating_as_poster,
            u1_0.ratings_as_fulfiller_count,
            u1_0.ratings_as_post_count,
            u1_0.theme,
            u1_0.updated_at 
        from
            users u1_0 
        where
            u1_0.rating_as_poster>=? 
        order by
            u1_0.rating_as_poster desc
2025-08-05 12:00:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /tasks
2025-08-05 12:00:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:00:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /tasks
2025-08-05 12:00:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:00:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks
2025-08-05 12:00:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:00:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /tasks
2025-08-05 12:00:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.accepted_at,
        t1_0.address_details,
        t1_0.category,
        t1_0.completed_at,
        t1_0.confirmed_at,
        t1_0.created_at,
        t1_0.deadline,
        t1_0.description,
        t1_0.estimated_duration_hours,
        t1_0.fulfiller_id,
        t1_0.is_urgent,
        t1_0.latitude,
        t1_0.location,
        t1_0.longitude,
        t1_0.poster_id,
        t1_0.price,
        t1_0.pricing_type,
        t1_0.requires_verification,
        t1_0.special_instructions,
        t1_0.started_at,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at 
    from
        tasks t1_0
2025-08-05 12:00:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks/search?keyword=grocery
2025-08-05 12:00:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:00:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:00:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /tasks/search?keyword=grocery
2025-08-05 12:00:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.accepted_at,
        t1_0.address_details,
        t1_0.category,
        t1_0.completed_at,
        t1_0.confirmed_at,
        t1_0.created_at,
        t1_0.deadline,
        t1_0.description,
        t1_0.estimated_duration_hours,
        t1_0.fulfiller_id,
        t1_0.is_urgent,
        t1_0.latitude,
        t1_0.location,
        t1_0.longitude,
        t1_0.poster_id,
        t1_0.price,
        t1_0.pricing_type,
        t1_0.requires_verification,
        t1_0.special_instructions,
        t1_0.started_at,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.status=?
2025-08-05 12:02:20 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-05 12:02:20 [http-nio-8080-exec-2] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:02:20 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:02:20 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-05 12:02:20 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 12:02:20 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 12:02:20 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:02:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 12:02:20 [http-nio-8080-exec-8] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:02:20 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:02:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 12:02:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 12:02:20 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 12:02:20 [http-nio-8080-exec-9] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:02:20 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:02:20 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 12:02:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 12:02:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 12:02:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.User */insert 
    into
        users (account_created_from, created_at, email, fcm_token, first_name, is_active, is_email_verified, is_phone_verified, last_login, last_name, password, phone_number, profile_picture_url, rating_as_fulfiller, rating_as_poster, ratings_as_fulfiller_count, ratings_as_post_count, theme, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:02:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.UserProfile */insert 
    into
        user_profiles (address_line1, address_line2, address_verified, availability_status, background_check_status, bio, city, country, created_at, date_of_birth, email_verified, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, gender, government_id_number, government_id_type, government_id_verified, home_latitude, home_longitude, kyc_status, last_location_update, notification_preferences, phone_verified, postal_code, preferred_radius_km, privacy_settings, state, tasks_completed, tasks_posted, total_earnings, total_spent, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:02:20 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:02:20 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-05 12:02:20 [http-nio-8080-exec-1] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:02:20 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:02:20 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-05 12:02:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:02:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-08-05 12:02:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:02:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/12
2025-08-05 12:02:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:02:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/12
2025-08-05 12:02:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:02:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /users/12
2025-08-05 12:02:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:02:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /users/12
2025-08-05 12:02:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:02:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/search?searchTerm=test
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/search?searchTerm=test
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        LOWER(u.firstName) LIKE LOWER(CONCAT('%', :searchTerm, '%')) 
        OR LOWER(u.lastName) LIKE LOWER(CONCAT('%', :searchTerm, '%')) 
        OR LOWER(u.email) LIKE LOWER(CONCAT('%', :searchTerm, '%')) */ select
            u1_0.id,
            u1_0.account_created_from,
            u1_0.created_at,
            u1_0.email,
            u1_0.fcm_token,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.is_email_verified,
            u1_0.is_phone_verified,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password,
            u1_0.phone_number,
            u1_0.profile_picture_url,
            u1_0.rating_as_fulfiller,
            u1_0.rating_as_poster,
            u1_0.ratings_as_fulfiller_count,
            u1_0.ratings_as_post_count,
            u1_0.theme,
            u1_0.updated_at 
        from
            users u1_0 
        where
            lower(u1_0.first_name) like lower(('%'||?||'%')) escape '' 
            or lower(u1_0.last_name) like lower(('%'||?||'%')) escape '' 
            or lower(u1_0.email) like lower(('%'||?||'%')) escape ''
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/top-posters?minRating=4.0
2025-08-05 12:02:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:02:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/top-posters?minRating=4.0
2025-08-05 12:02:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.ratingAsPoster >= :minRating 
    ORDER BY
        u.ratingAsPoster DESC */ select
            u1_0.id,
            u1_0.account_created_from,
            u1_0.created_at,
            u1_0.email,
            u1_0.fcm_token,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.is_email_verified,
            u1_0.is_phone_verified,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password,
            u1_0.phone_number,
            u1_0.profile_picture_url,
            u1_0.rating_as_fulfiller,
            u1_0.rating_as_poster,
            u1_0.ratings_as_fulfiller_count,
            u1_0.ratings_as_post_count,
            u1_0.theme,
            u1_0.updated_at 
        from
            users u1_0 
        where
            u1_0.rating_as_poster>=? 
        order by
            u1_0.rating_as_poster desc
2025-08-05 12:02:20 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /tasks
2025-08-05 12:02:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:02:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /tasks
2025-08-05 12:02:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:02:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks
2025-08-05 12:02:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:02:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /tasks
2025-08-05 12:02:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.accepted_at,
        t1_0.address_details,
        t1_0.category,
        t1_0.completed_at,
        t1_0.confirmed_at,
        t1_0.created_at,
        t1_0.deadline,
        t1_0.description,
        t1_0.estimated_duration_hours,
        t1_0.fulfiller_id,
        t1_0.is_urgent,
        t1_0.latitude,
        t1_0.location,
        t1_0.longitude,
        t1_0.poster_id,
        t1_0.price,
        t1_0.pricing_type,
        t1_0.requires_verification,
        t1_0.special_instructions,
        t1_0.started_at,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at 
    from
        tasks t1_0
2025-08-05 12:02:20 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks/search?keyword=grocery
2025-08-05 12:02:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:02:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:02:20 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /tasks/search?keyword=grocery
2025-08-05 12:02:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.accepted_at,
        t1_0.address_details,
        t1_0.category,
        t1_0.completed_at,
        t1_0.confirmed_at,
        t1_0.created_at,
        t1_0.deadline,
        t1_0.description,
        t1_0.estimated_duration_hours,
        t1_0.fulfiller_id,
        t1_0.is_urgent,
        t1_0.latitude,
        t1_0.location,
        t1_0.longitude,
        t1_0.poster_id,
        t1_0.price,
        t1_0.pricing_type,
        t1_0.requires_verification,
        t1_0.special_instructions,
        t1_0.started_at,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.status=?
2025-08-05 12:04:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-05 12:04:02 [http-nio-8080-exec-5] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:04:02 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:04:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-05 12:04:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 12:04:02 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 12:04:02 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:04:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 12:04:02 [http-nio-8080-exec-1] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:04:02 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:04:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 12:04:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 12:04:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 12:04:02 [http-nio-8080-exec-2] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:04:02 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:04:02 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 12:04:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 12:04:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 12:04:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.User */insert 
    into
        users (account_created_from, created_at, email, fcm_token, first_name, is_active, is_email_verified, is_phone_verified, last_login, last_name, password, phone_number, profile_picture_url, rating_as_fulfiller, rating_as_poster, ratings_as_fulfiller_count, ratings_as_post_count, theme, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:04:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.UserProfile */insert 
    into
        user_profiles (address_line1, address_line2, address_verified, availability_status, background_check_status, bio, city, country, created_at, date_of_birth, email_verified, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, gender, government_id_number, government_id_type, government_id_verified, home_latitude, home_longitude, kyc_status, last_location_update, notification_preferences, phone_verified, postal_code, preferred_radius_km, privacy_settings, state, tasks_completed, tasks_posted, total_earnings, total_spent, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:04:02 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:04:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-05 12:04:02 [http-nio-8080-exec-4] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:04:02 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:04:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-05 12:04:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:04:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-08-05 12:04:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:04:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/13
2025-08-05 12:04:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:04:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/13
2025-08-05 12:04:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:04:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /users/13
2025-08-05 12:04:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:04:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /users/13
2025-08-05 12:04:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:04:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/search?searchTerm=test
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/search?searchTerm=test
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        LOWER(u.firstName) LIKE LOWER(CONCAT('%', :searchTerm, '%')) 
        OR LOWER(u.lastName) LIKE LOWER(CONCAT('%', :searchTerm, '%')) 
        OR LOWER(u.email) LIKE LOWER(CONCAT('%', :searchTerm, '%')) */ select
            u1_0.id,
            u1_0.account_created_from,
            u1_0.created_at,
            u1_0.email,
            u1_0.fcm_token,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.is_email_verified,
            u1_0.is_phone_verified,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password,
            u1_0.phone_number,
            u1_0.profile_picture_url,
            u1_0.rating_as_fulfiller,
            u1_0.rating_as_poster,
            u1_0.ratings_as_fulfiller_count,
            u1_0.ratings_as_post_count,
            u1_0.theme,
            u1_0.updated_at 
        from
            users u1_0 
        where
            lower(u1_0.first_name) like lower(('%'||?||'%')) escape '' 
            or lower(u1_0.last_name) like lower(('%'||?||'%')) escape '' 
            or lower(u1_0.email) like lower(('%'||?||'%')) escape ''
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/top-posters?minRating=4.0
2025-08-05 12:04:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:04:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/top-posters?minRating=4.0
2025-08-05 12:04:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.ratingAsPoster >= :minRating 
    ORDER BY
        u.ratingAsPoster DESC */ select
            u1_0.id,
            u1_0.account_created_from,
            u1_0.created_at,
            u1_0.email,
            u1_0.fcm_token,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.is_email_verified,
            u1_0.is_phone_verified,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password,
            u1_0.phone_number,
            u1_0.profile_picture_url,
            u1_0.rating_as_fulfiller,
            u1_0.rating_as_poster,
            u1_0.ratings_as_fulfiller_count,
            u1_0.ratings_as_post_count,
            u1_0.theme,
            u1_0.updated_at 
        from
            users u1_0 
        where
            u1_0.rating_as_poster>=? 
        order by
            u1_0.rating_as_poster desc
2025-08-05 12:04:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /tasks
2025-08-05 12:04:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:04:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /tasks
2025-08-05 12:04:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:04:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks
2025-08-05 12:04:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:04:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /tasks
2025-08-05 12:04:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.accepted_at,
        t1_0.address_details,
        t1_0.category,
        t1_0.completed_at,
        t1_0.confirmed_at,
        t1_0.created_at,
        t1_0.deadline,
        t1_0.description,
        t1_0.estimated_duration_hours,
        t1_0.fulfiller_id,
        t1_0.is_urgent,
        t1_0.latitude,
        t1_0.location,
        t1_0.longitude,
        t1_0.poster_id,
        t1_0.price,
        t1_0.pricing_type,
        t1_0.requires_verification,
        t1_0.special_instructions,
        t1_0.started_at,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at 
    from
        tasks t1_0
2025-08-05 12:04:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks/search?keyword=grocery
2025-08-05 12:04:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:04:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:04:02 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /tasks/search?keyword=grocery
2025-08-05 12:04:02 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.accepted_at,
        t1_0.address_details,
        t1_0.category,
        t1_0.completed_at,
        t1_0.confirmed_at,
        t1_0.created_at,
        t1_0.deadline,
        t1_0.description,
        t1_0.estimated_duration_hours,
        t1_0.fulfiller_id,
        t1_0.is_urgent,
        t1_0.latitude,
        t1_0.location,
        t1_0.longitude,
        t1_0.poster_id,
        t1_0.price,
        t1_0.pricing_type,
        t1_0.requires_verification,
        t1_0.special_instructions,
        t1_0.started_at,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.status=?
2025-08-05 12:08:10 [main] INFO  c.z.urbanup.UrbanupApplication - Starting UrbanupApplication using Java 23.0.2 with PID 27175 (/Users/sanjanathyady/Desktop/urbanupMvp/urbanup/target/classes started by sanjanathyady in /Users/sanjanathyady/Desktop/urbanupMvp/urbanup)
2025-08-05 12:08:10 [main] DEBUG c.z.urbanup.UrbanupApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-05 12:08:10 [main] INFO  c.z.urbanup.UrbanupApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-05 12:08:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 12:08:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-05 12:08:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 93 ms. Found 9 JPA repository interfaces.
2025-08-05 12:08:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 12:08:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-05 12:08:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:08:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:08:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.NotificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:08:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:08:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:08:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:08:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:08:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:08:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:08:11 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-08-05 12:08:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-05 12:08:11 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-05 12:08:11 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-05 12:08:11 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-05 12:08:11 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 933 ms
2025-08-05 12:08:11 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-05 12:08:11 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-05 12:08:11 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-05 12:08:12 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-05 12:08:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-05 12:08:12 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@574218f
2025-08-05 12:08:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-05 12:08:12 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-05 12:08:12 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 13.20
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-05 12:08:12 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-05 12:08:12 [main] INFO  o.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@68fec965] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2025-08-05 12:08:13 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 12:08:13 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-05 12:08:14 [main] DEBUG c.z.u.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-05 12:08:14 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-08-05 12:08:16 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-05 12:08:17 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-08-05 12:08:17 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 12:08:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-05 12:08:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-05 12:08:17 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-05 12:08:17 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-08-05 12:08:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-05 12:08:26 [http-nio-8080-exec-8] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:08:26 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:08:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-05 12:08:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 12:08:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 12:08:26 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:08:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-08-05 12:08:26 [http-nio-8080-exec-2] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:08:26 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:08:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
2025-08-05 12:08:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 12:08:26 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 12:08:26 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:08:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 12:08:26 [http-nio-8080-exec-4] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:08:26 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:08:26 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 12:08:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 12:08:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 12:08:26 [http-nio-8080-exec-5] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:08:26 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:08:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 12:08:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 12:08:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 12:08:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.User */insert 
    into
        users (account_created_from, created_at, email, fcm_token, first_name, is_active, is_email_verified, is_phone_verified, last_login, last_name, password, phone_number, profile_picture_url, rating_as_fulfiller, rating_as_poster, ratings_as_fulfiller_count, ratings_as_post_count, theme, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:08:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.UserProfile */insert 
    into
        user_profiles (address_line1, address_line2, address_verified, availability_status, background_check_status, bio, city, country, created_at, date_of_birth, email_verified, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, gender, government_id_number, government_id_type, government_id_verified, home_latitude, home_longitude, kyc_status, last_location_update, notification_preferences, phone_verified, postal_code, preferred_radius_km, privacy_settings, state, tasks_completed, tasks_posted, total_earnings, total_spent, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:08:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:08:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-05 12:08:26 [http-nio-8080-exec-7] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:08:26 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:08:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-05 12:08:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:08:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-7] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-08-05 12:08:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:08:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/14
2025-08-05 12:08:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:08:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/14
2025-08-05 12:08:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:08:26 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /users/14
2025-08-05 12:08:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:08:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /users/14
2025-08-05 12:08:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:08:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 12:08:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* update
        for com.zephyros.urbanup.model.User */update users 
    set
        account_created_from=?,
        created_at=?,
        email=?,
        fcm_token=?,
        first_name=?,
        is_active=?,
        is_email_verified=?,
        is_phone_verified=?,
        last_login=?,
        last_name=?,
        password=?,
        phone_number=?,
        profile_picture_url=?,
        rating_as_fulfiller=?,
        rating_as_poster=?,
        ratings_as_fulfiller_count=?,
        ratings_as_post_count=?,
        theme=?,
        updated_at=? 
    where
        id=?
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/search?searchTerm=test
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/search?searchTerm=test
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        LOWER(u.firstName) LIKE LOWER(CONCAT('%', :searchTerm, '%')) 
        OR LOWER(u.lastName) LIKE LOWER(CONCAT('%', :searchTerm, '%')) 
        OR LOWER(u.email) LIKE LOWER(CONCAT('%', :searchTerm, '%')) */ select
            u1_0.id,
            u1_0.account_created_from,
            u1_0.created_at,
            u1_0.email,
            u1_0.fcm_token,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.is_email_verified,
            u1_0.is_phone_verified,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password,
            u1_0.phone_number,
            u1_0.profile_picture_url,
            u1_0.rating_as_fulfiller,
            u1_0.rating_as_poster,
            u1_0.ratings_as_fulfiller_count,
            u1_0.ratings_as_post_count,
            u1_0.theme,
            u1_0.updated_at 
        from
            users u1_0 
        where
            lower(u1_0.first_name) like lower(('%'||?||'%')) escape '' 
            or lower(u1_0.last_name) like lower(('%'||?||'%')) escape '' 
            or lower(u1_0.email) like lower(('%'||?||'%')) escape ''
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/top-posters?minRating=4.0
2025-08-05 12:08:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:08:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/top-posters?minRating=4.0
2025-08-05 12:08:26 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.ratingAsPoster >= :minRating 
    ORDER BY
        u.ratingAsPoster DESC */ select
            u1_0.id,
            u1_0.account_created_from,
            u1_0.created_at,
            u1_0.email,
            u1_0.fcm_token,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.is_email_verified,
            u1_0.is_phone_verified,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password,
            u1_0.phone_number,
            u1_0.profile_picture_url,
            u1_0.rating_as_fulfiller,
            u1_0.rating_as_poster,
            u1_0.ratings_as_fulfiller_count,
            u1_0.ratings_as_post_count,
            u1_0.theme,
            u1_0.updated_at 
        from
            users u1_0 
        where
            u1_0.rating_as_poster>=? 
        order by
            u1_0.rating_as_poster desc
2025-08-05 12:08:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /tasks
2025-08-05 12:08:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:08:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /tasks
2025-08-05 12:08:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:08:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks
2025-08-05 12:08:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:08:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /tasks
2025-08-05 12:08:26 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.accepted_at,
        t1_0.address_details,
        t1_0.category,
        t1_0.completed_at,
        t1_0.confirmed_at,
        t1_0.created_at,
        t1_0.deadline,
        t1_0.description,
        t1_0.estimated_duration_hours,
        t1_0.fulfiller_id,
        t1_0.is_urgent,
        t1_0.latitude,
        t1_0.location,
        t1_0.longitude,
        t1_0.poster_id,
        t1_0.price,
        t1_0.pricing_type,
        t1_0.requires_verification,
        t1_0.special_instructions,
        t1_0.started_at,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at 
    from
        tasks t1_0
2025-08-05 12:08:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks/search?keyword=grocery
2025-08-05 12:08:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:08:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:08:26 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /tasks/search?keyword=grocery
2025-08-05 12:08:26 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.accepted_at,
        t1_0.address_details,
        t1_0.category,
        t1_0.completed_at,
        t1_0.confirmed_at,
        t1_0.created_at,
        t1_0.deadline,
        t1_0.description,
        t1_0.estimated_duration_hours,
        t1_0.fulfiller_id,
        t1_0.is_urgent,
        t1_0.latitude,
        t1_0.location,
        t1_0.longitude,
        t1_0.poster_id,
        t1_0.price,
        t1_0.pricing_type,
        t1_0.requires_verification,
        t1_0.special_instructions,
        t1_0.started_at,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.status=?
2025-08-05 12:11:33 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-05 12:11:35 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-05 12:11:35 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 12:11:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-05 12:11:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-05 12:11:44 [main] INFO  c.z.urbanup.UrbanupApplication - Starting UrbanupApplication using Java 23.0.2 with PID 28239 (/Users/sanjanathyady/Desktop/urbanupMvp/urbanup/target/classes started by sanjanathyady in /Users/sanjanathyady/Desktop/urbanupMvp/urbanup)
2025-08-05 12:11:44 [main] DEBUG c.z.urbanup.UrbanupApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-05 12:11:44 [main] INFO  c.z.urbanup.UrbanupApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-05 12:11:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 12:11:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-05 12:11:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 83 ms. Found 9 JPA repository interfaces.
2025-08-05 12:11:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 12:11:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-05 12:11:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:11:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:11:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.NotificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:11:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:11:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:11:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:11:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:11:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:11:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:11:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-05 12:11:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-05 12:11:45 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-05 12:11:45 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-05 12:11:45 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-05 12:11:45 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 840 ms
2025-08-05 12:11:45 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-05 12:11:45 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-05 12:11:45 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-05 12:11:45 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-05 12:11:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-05 12:11:45 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@201a8ea7
2025-08-05 12:11:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-05 12:11:45 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-05 12:11:45 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 13.20
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-05 12:11:46 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-05 12:11:46 [main] INFO  o.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1d4b0a07] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2025-08-05 12:11:46 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 12:11:46 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-05 12:11:47 [main] DEBUG c.z.u.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-05 12:11:47 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-08-05 12:11:50 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-05 12:11:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-08-05 12:11:50 [main] INFO  c.z.urbanup.UrbanupApplication - Started UrbanupApplication in 6.522 seconds (process running for 6.696)
2025-08-05 12:12:06 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-05 12:12:06 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-05 12:12:06 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2025-08-05 12:12:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-05 12:12:06 [http-nio-8080-exec-1] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:12:06 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:12:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-05 12:12:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 12:12:06 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 12:12:06 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:12:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-08-05 12:12:06 [http-nio-8080-exec-4] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:12:06 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:12:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
2025-08-05 12:12:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 12:12:06 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 12:12:06 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:12:06 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 12:12:06 [http-nio-8080-exec-6] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:12:06 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:12:06 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 12:12:06 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 12:12:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 12:12:06 [http-nio-8080-exec-7] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:12:06 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:12:06 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 12:12:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 12:12:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 12:12:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.User */insert 
    into
        users (account_created_from, created_at, email, fcm_token, first_name, is_active, is_email_verified, is_phone_verified, last_login, last_name, password, phone_number, profile_picture_url, rating_as_fulfiller, rating_as_poster, ratings_as_fulfiller_count, ratings_as_post_count, theme, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:12:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.UserProfile */insert 
    into
        user_profiles (address_line1, address_line2, address_verified, availability_status, background_check_status, bio, city, country, created_at, date_of_birth, email_verified, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, gender, government_id_number, government_id_type, government_id_verified, home_latitude, home_longitude, kyc_status, last_location_update, notification_preferences, phone_verified, postal_code, preferred_radius_km, privacy_settings, state, tasks_completed, tasks_posted, total_earnings, total_spent, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:12:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:12:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* update
        for com.zephyros.urbanup.model.User */update users 
    set
        account_created_from=?,
        created_at=?,
        email=?,
        fcm_token=?,
        first_name=?,
        is_active=?,
        is_email_verified=?,
        is_phone_verified=?,
        last_login=?,
        last_name=?,
        password=?,
        phone_number=?,
        profile_picture_url=?,
        rating_as_fulfiller=?,
        rating_as_poster=?,
        ratings_as_fulfiller_count=?,
        ratings_as_post_count=?,
        theme=?,
        updated_at=? 
    where
        id=?
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/15
2025-08-05 12:12:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:12:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/15
2025-08-05 12:12:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:12:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /users/15
2025-08-05 12:12:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:12:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /users/15
2025-08-05 12:12:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:12:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 12:12:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* update
        for com.zephyros.urbanup.model.User */update users 
    set
        account_created_from=?,
        created_at=?,
        email=?,
        fcm_token=?,
        first_name=?,
        is_active=?,
        is_email_verified=?,
        is_phone_verified=?,
        last_login=?,
        last_name=?,
        password=?,
        phone_number=?,
        profile_picture_url=?,
        rating_as_fulfiller=?,
        rating_as_poster=?,
        ratings_as_fulfiller_count=?,
        ratings_as_post_count=?,
        theme=?,
        updated_at=? 
    where
        id=?
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/search?searchTerm=test
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/search?searchTerm=test
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        LOWER(u.firstName) LIKE LOWER(CONCAT('%', :searchTerm, '%')) 
        OR LOWER(u.lastName) LIKE LOWER(CONCAT('%', :searchTerm, '%')) 
        OR LOWER(u.email) LIKE LOWER(CONCAT('%', :searchTerm, '%')) */ select
            u1_0.id,
            u1_0.account_created_from,
            u1_0.created_at,
            u1_0.email,
            u1_0.fcm_token,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.is_email_verified,
            u1_0.is_phone_verified,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password,
            u1_0.phone_number,
            u1_0.profile_picture_url,
            u1_0.rating_as_fulfiller,
            u1_0.rating_as_poster,
            u1_0.ratings_as_fulfiller_count,
            u1_0.ratings_as_post_count,
            u1_0.theme,
            u1_0.updated_at 
        from
            users u1_0 
        where
            lower(u1_0.first_name) like lower(('%'||?||'%')) escape '' 
            or lower(u1_0.last_name) like lower(('%'||?||'%')) escape '' 
            or lower(u1_0.email) like lower(('%'||?||'%')) escape ''
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/top-posters?minRating=4.0
2025-08-05 12:12:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:12:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/top-posters?minRating=4.0
2025-08-05 12:12:07 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.ratingAsPoster >= :minRating 
    ORDER BY
        u.ratingAsPoster DESC */ select
            u1_0.id,
            u1_0.account_created_from,
            u1_0.created_at,
            u1_0.email,
            u1_0.fcm_token,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.is_email_verified,
            u1_0.is_phone_verified,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password,
            u1_0.phone_number,
            u1_0.profile_picture_url,
            u1_0.rating_as_fulfiller,
            u1_0.rating_as_poster,
            u1_0.ratings_as_fulfiller_count,
            u1_0.ratings_as_post_count,
            u1_0.theme,
            u1_0.updated_at 
        from
            users u1_0 
        where
            u1_0.rating_as_poster>=? 
        order by
            u1_0.rating_as_poster desc
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /tasks
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /tasks
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Task */insert 
    into
        tasks (accepted_at, address_details, category, completed_at, confirmed_at, created_at, deadline, description, estimated_duration_hours, fulfiller_id, is_urgent, latitude, location, longitude, poster_id, price, pricing_type, requires_verification, special_instructions, started_at, status, title, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:12:07 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:12:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks
2025-08-05 12:12:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:12:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /tasks
2025-08-05 12:12:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.accepted_at,
        t1_0.address_details,
        t1_0.category,
        t1_0.completed_at,
        t1_0.confirmed_at,
        t1_0.created_at,
        t1_0.deadline,
        t1_0.description,
        t1_0.estimated_duration_hours,
        t1_0.fulfiller_id,
        t1_0.is_urgent,
        t1_0.latitude,
        t1_0.location,
        t1_0.longitude,
        t1_0.poster_id,
        t1_0.price,
        t1_0.pricing_type,
        t1_0.requires_verification,
        t1_0.special_instructions,
        t1_0.started_at,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at 
    from
        tasks t1_0
2025-08-05 12:12:07 [http-nio-8080-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Could not initialize proxy [com.zephyros.urbanup.model.User#15] - no session]
2025-08-05 12:12:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 12:12:07 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 12:12:07 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:12:07 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks/search?keyword=grocery
2025-08-05 12:12:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:12:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:12:07 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /tasks/search?keyword=grocery
2025-08-05 12:12:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.accepted_at,
        t1_0.address_details,
        t1_0.category,
        t1_0.completed_at,
        t1_0.confirmed_at,
        t1_0.created_at,
        t1_0.deadline,
        t1_0.description,
        t1_0.estimated_duration_hours,
        t1_0.fulfiller_id,
        t1_0.is_urgent,
        t1_0.latitude,
        t1_0.location,
        t1_0.longitude,
        t1_0.poster_id,
        t1_0.price,
        t1_0.pricing_type,
        t1_0.requires_verification,
        t1_0.special_instructions,
        t1_0.started_at,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.status=?
2025-08-05 12:12:07 [http-nio-8080-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Could not initialize proxy [com.zephyros.urbanup.model.User#15] - no session]
2025-08-05 12:12:07 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error?keyword=grocery
2025-08-05 12:12:07 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error?keyword=grocery
2025-08-05 12:12:07 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:21:21 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-05 12:21:23 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-05 12:21:23 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 12:21:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-05 12:21:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-05 12:21:55 [main] INFO  c.z.urbanup.UrbanupApplication - Starting UrbanupApplication using Java 23.0.2 with PID 29900 (/Users/sanjanathyady/Desktop/urbanupMvp/urbanup/target/classes started by sanjanathyady in /Users/sanjanathyady/Desktop/urbanupMvp/urbanup)
2025-08-05 12:21:55 [main] DEBUG c.z.urbanup.UrbanupApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-05 12:21:55 [main] INFO  c.z.urbanup.UrbanupApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-05 12:21:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 12:21:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-05 12:21:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 80 ms. Found 9 JPA repository interfaces.
2025-08-05 12:21:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 12:21:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-05 12:21:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:21:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:21:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.NotificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:21:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:21:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:21:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:21:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:21:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:21:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:21:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-05 12:21:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-05 12:21:56 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-05 12:21:56 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-05 12:21:56 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-05 12:21:56 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 854 ms
2025-08-05 12:21:56 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-05 12:21:56 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-05 12:21:56 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-05 12:21:57 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-05 12:21:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-05 12:21:57 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2986427e
2025-08-05 12:21:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-05 12:21:57 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-05 12:21:57 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 13.20
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-05 12:21:57 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-05 12:21:57 [main] INFO  o.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2643c33f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2025-08-05 12:21:58 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 12:21:58 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-05 12:21:59 [main] DEBUG c.z.u.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-05 12:21:59 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-08-05 12:22:02 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-05 12:22:03 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-08-05 12:22:03 [main] INFO  c.z.urbanup.UrbanupApplication - Started UrbanupApplication in 7.388 seconds (process running for 7.551)
2025-08-05 12:22:41 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-05 12:22:41 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-05 12:22:41 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-05 12:22:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-05 12:22:41 [http-nio-8080-exec-1] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:22:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:22:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-05 12:22:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 12:22:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 12:22:41 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:22:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-08-05 12:22:41 [http-nio-8080-exec-4] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:22:41 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:22:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
2025-08-05 12:22:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 12:22:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 12:22:41 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:22:41 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 12:22:41 [http-nio-8080-exec-6] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:22:41 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:22:41 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 12:22:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 12:22:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 12:22:41 [http-nio-8080-exec-7] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:22:41 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:22:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 12:22:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 12:22:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 12:22:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.User */insert 
    into
        users (account_created_from, created_at, email, fcm_token, first_name, is_active, is_email_verified, is_phone_verified, last_login, last_name, password, phone_number, profile_picture_url, rating_as_fulfiller, rating_as_poster, ratings_as_fulfiller_count, ratings_as_post_count, theme, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:22:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.UserProfile */insert 
    into
        user_profiles (address_line1, address_line2, address_verified, availability_status, background_check_status, bio, city, country, created_at, date_of_birth, email_verified, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, gender, government_id_number, government_id_type, government_id_verified, home_latitude, home_longitude, kyc_status, last_location_update, notification_preferences, phone_verified, postal_code, preferred_radius_km, privacy_settings, state, tasks_completed, tasks_posted, total_earnings, total_spent, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:22:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:22:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* update
        for com.zephyros.urbanup.model.User */update users 
    set
        account_created_from=?,
        created_at=?,
        email=?,
        fcm_token=?,
        first_name=?,
        is_active=?,
        is_email_verified=?,
        is_phone_verified=?,
        last_login=?,
        last_name=?,
        password=?,
        phone_number=?,
        profile_picture_url=?,
        rating_as_fulfiller=?,
        rating_as_poster=?,
        ratings_as_fulfiller_count=?,
        ratings_as_post_count=?,
        theme=?,
        updated_at=? 
    where
        id=?
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/16
2025-08-05 12:22:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:22:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/16
2025-08-05 12:22:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:22:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /users/16
2025-08-05 12:22:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:22:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /users/16
2025-08-05 12:22:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:22:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 12:22:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* update
        for com.zephyros.urbanup.model.User */update users 
    set
        account_created_from=?,
        created_at=?,
        email=?,
        fcm_token=?,
        first_name=?,
        is_active=?,
        is_email_verified=?,
        is_phone_verified=?,
        last_login=?,
        last_name=?,
        password=?,
        phone_number=?,
        profile_picture_url=?,
        rating_as_fulfiller=?,
        rating_as_poster=?,
        ratings_as_fulfiller_count=?,
        ratings_as_post_count=?,
        theme=?,
        updated_at=? 
    where
        id=?
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/search?searchTerm=test
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/search?searchTerm=test
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        LOWER(u.firstName) LIKE LOWER(CONCAT('%', :searchTerm, '%')) 
        OR LOWER(u.lastName) LIKE LOWER(CONCAT('%', :searchTerm, '%')) 
        OR LOWER(u.email) LIKE LOWER(CONCAT('%', :searchTerm, '%')) */ select
            u1_0.id,
            u1_0.account_created_from,
            u1_0.created_at,
            u1_0.email,
            u1_0.fcm_token,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.is_email_verified,
            u1_0.is_phone_verified,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password,
            u1_0.phone_number,
            u1_0.profile_picture_url,
            u1_0.rating_as_fulfiller,
            u1_0.rating_as_poster,
            u1_0.ratings_as_fulfiller_count,
            u1_0.ratings_as_post_count,
            u1_0.theme,
            u1_0.updated_at 
        from
            users u1_0 
        where
            lower(u1_0.first_name) like lower(('%'||?||'%')) escape '' 
            or lower(u1_0.last_name) like lower(('%'||?||'%')) escape '' 
            or lower(u1_0.email) like lower(('%'||?||'%')) escape ''
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/top-posters?minRating=4.0
2025-08-05 12:22:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:22:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/top-posters?minRating=4.0
2025-08-05 12:22:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.ratingAsPoster >= :minRating 
    ORDER BY
        u.ratingAsPoster DESC */ select
            u1_0.id,
            u1_0.account_created_from,
            u1_0.created_at,
            u1_0.email,
            u1_0.fcm_token,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.is_email_verified,
            u1_0.is_phone_verified,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password,
            u1_0.phone_number,
            u1_0.profile_picture_url,
            u1_0.rating_as_fulfiller,
            u1_0.rating_as_poster,
            u1_0.ratings_as_fulfiller_count,
            u1_0.ratings_as_post_count,
            u1_0.theme,
            u1_0.updated_at 
        from
            users u1_0 
        where
            u1_0.rating_as_poster>=? 
        order by
            u1_0.rating_as_poster desc
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /tasks
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /tasks
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Task */insert 
    into
        tasks (accepted_at, address_details, category, completed_at, confirmed_at, created_at, deadline, description, estimated_duration_hours, fulfiller_id, is_urgent, latitude, location, longitude, poster_id, price, pricing_type, requires_verification, special_instructions, started_at, status, title, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:22:42 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:22:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks
2025-08-05 12:22:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:22:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /tasks
2025-08-05 12:22:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        t 
    FROM
        Task t 
    LEFT JOIN
        
    FETCH
        t.poster 
    LEFT JOIN
        
    FETCH
        t.fulfiller */ select
            t1_0.id,
            t1_0.accepted_at,
            t1_0.address_details,
            t1_0.category,
            t1_0.completed_at,
            t1_0.confirmed_at,
            t1_0.created_at,
            t1_0.deadline,
            t1_0.description,
            t1_0.estimated_duration_hours,
            f1_0.id,
            f1_0.account_created_from,
            f1_0.created_at,
            f1_0.email,
            f1_0.fcm_token,
            f1_0.first_name,
            f1_0.is_active,
            f1_0.is_email_verified,
            f1_0.is_phone_verified,
            f1_0.last_login,
            f1_0.last_name,
            f1_0.password,
            f1_0.phone_number,
            f1_0.profile_picture_url,
            f1_0.rating_as_fulfiller,
            f1_0.rating_as_poster,
            f1_0.ratings_as_fulfiller_count,
            f1_0.ratings_as_post_count,
            f1_0.theme,
            f1_0.updated_at,
            t1_0.is_urgent,
            t1_0.latitude,
            t1_0.location,
            t1_0.longitude,
            t1_0.poster_id,
            p1_0.id,
            p1_0.account_created_from,
            p1_0.created_at,
            p1_0.email,
            p1_0.fcm_token,
            p1_0.first_name,
            p1_0.is_active,
            p1_0.is_email_verified,
            p1_0.is_phone_verified,
            p1_0.last_login,
            p1_0.last_name,
            p1_0.password,
            p1_0.phone_number,
            p1_0.profile_picture_url,
            p1_0.rating_as_fulfiller,
            p1_0.rating_as_poster,
            p1_0.ratings_as_fulfiller_count,
            p1_0.ratings_as_post_count,
            p1_0.theme,
            p1_0.updated_at,
            t1_0.price,
            t1_0.pricing_type,
            t1_0.requires_verification,
            t1_0.special_instructions,
            t1_0.started_at,
            t1_0.status,
            t1_0.title,
            t1_0.updated_at 
        from
            tasks t1_0 
        left join
            users p1_0 
                on p1_0.id=t1_0.poster_id 
        left join
            users f1_0 
                on f1_0.id=t1_0.fulfiller_id
2025-08-05 12:22:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: failed to lazily initialize a collection of role: com.zephyros.urbanup.model.Task.imageUrls: could not initialize proxy - no Session]
2025-08-05 12:22:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 12:22:42 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 12:22:42 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:22:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks/search?keyword=grocery
2025-08-05 12:22:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:22:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:22:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /tasks/search?keyword=grocery
2025-08-05 12:22:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.accepted_at,
        t1_0.address_details,
        t1_0.category,
        t1_0.completed_at,
        t1_0.confirmed_at,
        t1_0.created_at,
        t1_0.deadline,
        t1_0.description,
        t1_0.estimated_duration_hours,
        t1_0.fulfiller_id,
        t1_0.is_urgent,
        t1_0.latitude,
        t1_0.location,
        t1_0.longitude,
        t1_0.poster_id,
        t1_0.price,
        t1_0.pricing_type,
        t1_0.requires_verification,
        t1_0.special_instructions,
        t1_0.started_at,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.status=?
2025-08-05 12:22:42 [http-nio-8080-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Could not initialize proxy [com.zephyros.urbanup.model.User#15] - no session]
2025-08-05 12:22:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error?keyword=grocery
2025-08-05 12:22:42 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error?keyword=grocery
2025-08-05 12:22:42 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:25:33 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-05 12:25:35 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-05 12:25:35 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 12:25:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-05 12:25:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-05 12:27:48 [main] INFO  c.z.urbanup.UrbanupApplication - Starting UrbanupApplication using Java 23.0.2 with PID 30894 (/Users/sanjanathyady/Desktop/urbanupMvp/urbanup/target/classes started by sanjanathyady in /Users/sanjanathyady/Desktop/urbanupMvp/urbanup)
2025-08-05 12:27:48 [main] DEBUG c.z.urbanup.UrbanupApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-05 12:27:48 [main] INFO  c.z.urbanup.UrbanupApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-05 12:27:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 12:27:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-05 12:27:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 9 JPA repository interfaces.
2025-08-05 12:27:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-05 12:27:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-05 12:27:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:27:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:27:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.NotificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:27:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:27:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:27:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:27:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.TaskRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:27:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:27:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.zephyros.urbanup.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-08-05 12:27:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2025-08-05 12:27:48 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-05 12:27:48 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-05 12:27:48 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-05 12:27:48 [main] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-08-05 12:27:48 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 800 ms
2025-08-05 12:27:49 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-05 12:27:49 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-05 12:27:49 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-05 12:27:49 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-05 12:27:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-05 12:27:49 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@58b3eb1
2025-08-05 12:27:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-05 12:27:49 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-05 12:27:49 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 13.20
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-05 12:27:50 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-05 12:27:50 [main] INFO  o.hibernate.orm.connections.access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@763a72da] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2025-08-05 12:27:50 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-05 12:27:50 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-05 12:27:51 [main] DEBUG c.z.u.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-05 12:27:51 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-08-05 12:27:54 [main] DEBUG o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-08-05 12:27:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-08-05 12:27:54 [main] INFO  c.z.urbanup.UrbanupApplication - Started UrbanupApplication in 6.658 seconds (process running for 6.86)
2025-08-05 12:28:59 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-05 12:28:59 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-05 12:28:59 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2025-08-05 12:28:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /actuator/health
2025-08-05 12:28:59 [http-nio-8080-exec-1] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:28:59 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:28:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /actuator/health
2025-08-05 12:28:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 12:28:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 12:28:59 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:28:59 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
2025-08-05 12:28:59 [http-nio-8080-exec-4] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:28:59 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:28:59 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
2025-08-05 12:28:59 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
2025-08-05 12:28:59 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error
2025-08-05 12:28:59 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:28:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 12:28:59 [http-nio-8080-exec-6] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:28:59 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:28:59 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 12:28:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 12:28:59 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/register
2025-08-05 12:28:59 [http-nio-8080-exec-7] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:28:59 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:28:59 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/register
2025-08-05 12:28:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-08-05 12:28:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 12:28:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.User */insert 
    into
        users (account_created_from, created_at, email, fcm_token, first_name, is_active, is_email_verified, is_phone_verified, last_login, last_name, password, phone_number, profile_picture_url, rating_as_fulfiller, rating_as_poster, ratings_as_fulfiller_count, ratings_as_post_count, theme, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:28:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.UserProfile */insert 
    into
        user_profiles (address_line1, address_line2, address_verified, availability_status, background_check_status, bio, city, country, created_at, date_of_birth, email_verified, emergency_contact_name, emergency_contact_phone, emergency_contact_relationship, gender, government_id_number, government_id_type, government_id_verified, home_latitude, home_longitude, kyc_status, last_location_update, notification_preferences, phone_verified, postal_code, preferred_radius_km, privacy_settings, state, tasks_completed, tasks_posted, total_earnings, total_spent, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:28:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:28:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* update
        for com.zephyros.urbanup.model.User */update users 
    set
        account_created_from=?,
        created_at=?,
        email=?,
        fcm_token=?,
        first_name=?,
        is_active=?,
        is_email_verified=?,
        is_phone_verified=?,
        last_login=?,
        last_name=?,
        password=?,
        phone_number=?,
        profile_picture_url=?,
        rating_as_fulfiller=?,
        rating_as_poster=?,
        ratings_as_fulfiller_count=?,
        ratings_as_post_count=?,
        theme=?,
        updated_at=? 
    where
        id=?
2025-08-05 12:28:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-08-05 12:28:59 [http-nio-8080-exec-9] DEBUG c.z.u.s.JwtAuthenticationFilter - JWT Token does not begin with Bearer String
2025-08-05 12:28:59 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-08-05 12:28:59 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-08-05 12:28:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:28:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:28:59 [http-nio-8080-exec-9] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-08-05 12:28:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:28:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:28:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/17
2025-08-05 12:28:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:28:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:28:59 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/17
2025-08-05 12:28:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:28:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:28:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing PUT /users/17
2025-08-05 12:28:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:28:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:28:59 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured PUT /users/17
2025-08-05 12:28:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:28:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:28:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.phone_number=? 
    fetch
        first ? rows only
2025-08-05 12:28:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* update
        for com.zephyros.urbanup.model.User */update users 
    set
        account_created_from=?,
        created_at=?,
        email=?,
        fcm_token=?,
        first_name=?,
        is_active=?,
        is_email_verified=?,
        is_phone_verified=?,
        last_login=?,
        last_name=?,
        password=?,
        phone_number=?,
        profile_picture_url=?,
        rating_as_fulfiller=?,
        rating_as_poster=?,
        ratings_as_fulfiller_count=?,
        ratings_as_post_count=?,
        theme=?,
        updated_at=? 
    where
        id=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/search?searchTerm=test
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/search?searchTerm=test
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        LOWER(u.firstName) LIKE LOWER(CONCAT('%', :searchTerm, '%')) 
        OR LOWER(u.lastName) LIKE LOWER(CONCAT('%', :searchTerm, '%')) 
        OR LOWER(u.email) LIKE LOWER(CONCAT('%', :searchTerm, '%')) */ select
            u1_0.id,
            u1_0.account_created_from,
            u1_0.created_at,
            u1_0.email,
            u1_0.fcm_token,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.is_email_verified,
            u1_0.is_phone_verified,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password,
            u1_0.phone_number,
            u1_0.profile_picture_url,
            u1_0.rating_as_fulfiller,
            u1_0.rating_as_poster,
            u1_0.ratings_as_fulfiller_count,
            u1_0.ratings_as_post_count,
            u1_0.theme,
            u1_0.updated_at 
        from
            users u1_0 
        where
            lower(u1_0.first_name) like lower(('%'||?||'%')) escape '' 
            or lower(u1_0.last_name) like lower(('%'||?||'%')) escape '' 
            or lower(u1_0.email) like lower(('%'||?||'%')) escape ''
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /users/top-posters?minRating=4.0
2025-08-05 12:29:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:29:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /users/top-posters?minRating=4.0
2025-08-05 12:29:00 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* SELECT
        u 
    FROM
        User u 
    WHERE
        u.ratingAsPoster >= :minRating 
    ORDER BY
        u.ratingAsPoster DESC */ select
            u1_0.id,
            u1_0.account_created_from,
            u1_0.created_at,
            u1_0.email,
            u1_0.fcm_token,
            u1_0.first_name,
            u1_0.is_active,
            u1_0.is_email_verified,
            u1_0.is_phone_verified,
            u1_0.last_login,
            u1_0.last_name,
            u1_0.password,
            u1_0.phone_number,
            u1_0.profile_picture_url,
            u1_0.rating_as_fulfiller,
            u1_0.rating_as_poster,
            u1_0.ratings_as_fulfiller_count,
            u1_0.ratings_as_post_count,
            u1_0.theme,
            u1_0.updated_at 
        from
            users u1_0 
        where
            u1_0.rating_as_poster>=? 
        order by
            u1_0.rating_as_poster desc
2025-08-05 12:29:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /tasks
2025-08-05 12:29:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:29:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /tasks
2025-08-05 12:29:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-05 12:29:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Task */insert 
    into
        tasks (accepted_at, address_details, category, completed_at, confirmed_at, created_at, deadline, description, estimated_duration_hours, fulfiller_id, is_urgent, latitude, location, longitude, poster_id, price, pricing_type, requires_verification, special_instructions, started_at, status, title, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:29:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* insert for
        com.zephyros.urbanup.model.Notification */insert 
    into
        notifications (chat_id, created_at, deep_link_url, expires_at, is_pushed, is_read, message, payment_id, priority, pushed_at, read_at, review_id, task_id, title, type, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-05 12:29:00 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks
2025-08-05 12:29:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:29:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /tasks
2025-08-05 12:29:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* SELECT
        t 
    FROM
        Task t 
    LEFT JOIN
        
    FETCH
        t.poster 
    LEFT JOIN
        
    FETCH
        t.fulfiller */ select
            t1_0.id,
            t1_0.accepted_at,
            t1_0.address_details,
            t1_0.category,
            t1_0.completed_at,
            t1_0.confirmed_at,
            t1_0.created_at,
            t1_0.deadline,
            t1_0.description,
            t1_0.estimated_duration_hours,
            f1_0.id,
            f1_0.account_created_from,
            f1_0.created_at,
            f1_0.email,
            f1_0.fcm_token,
            f1_0.first_name,
            f1_0.is_active,
            f1_0.is_email_verified,
            f1_0.is_phone_verified,
            f1_0.last_login,
            f1_0.last_name,
            f1_0.password,
            f1_0.phone_number,
            f1_0.profile_picture_url,
            f1_0.rating_as_fulfiller,
            f1_0.rating_as_poster,
            f1_0.ratings_as_fulfiller_count,
            f1_0.ratings_as_post_count,
            f1_0.theme,
            f1_0.updated_at,
            t1_0.is_urgent,
            t1_0.latitude,
            t1_0.location,
            t1_0.longitude,
            t1_0.poster_id,
            p1_0.id,
            p1_0.account_created_from,
            p1_0.created_at,
            p1_0.email,
            p1_0.fcm_token,
            p1_0.first_name,
            p1_0.is_active,
            p1_0.is_email_verified,
            p1_0.is_phone_verified,
            p1_0.last_login,
            p1_0.last_name,
            p1_0.password,
            p1_0.phone_number,
            p1_0.profile_picture_url,
            p1_0.rating_as_fulfiller,
            p1_0.rating_as_poster,
            p1_0.ratings_as_fulfiller_count,
            p1_0.ratings_as_post_count,
            p1_0.theme,
            p1_0.updated_at,
            t1_0.price,
            t1_0.pricing_type,
            t1_0.requires_verification,
            t1_0.special_instructions,
            t1_0.started_at,
            t1_0.status,
            t1_0.title,
            t1_0.updated_at 
        from
            tasks t1_0 
        left join
            users p1_0 
                on p1_0.id=t1_0.poster_id 
        left join
            users f1_0 
                on f1_0.id=t1_0.fulfiller_id
2025-08-05 12:29:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /tasks/search?keyword=grocery
2025-08-05 12:29:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-05 12:29:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        up1_0.id,
        up1_0.address_line1,
        up1_0.address_line2,
        up1_0.address_verified,
        up1_0.availability_status,
        up1_0.background_check_status,
        up1_0.bio,
        up1_0.city,
        up1_0.country,
        up1_0.created_at,
        up1_0.date_of_birth,
        up1_0.email_verified,
        up1_0.emergency_contact_name,
        up1_0.emergency_contact_phone,
        up1_0.emergency_contact_relationship,
        up1_0.gender,
        up1_0.government_id_number,
        up1_0.government_id_type,
        up1_0.government_id_verified,
        up1_0.home_latitude,
        up1_0.home_longitude,
        up1_0.kyc_status,
        up1_0.last_location_update,
        up1_0.notification_preferences,
        up1_0.phone_verified,
        up1_0.postal_code,
        up1_0.preferred_radius_km,
        up1_0.privacy_settings,
        up1_0.state,
        up1_0.tasks_completed,
        up1_0.tasks_posted,
        up1_0.total_earnings,
        up1_0.total_spent,
        up1_0.updated_at,
        up1_0.user_id,
        u1_0.id,
        u1_0.account_created_from,
        u1_0.created_at,
        u1_0.email,
        u1_0.fcm_token,
        u1_0.first_name,
        u1_0.is_active,
        u1_0.is_email_verified,
        u1_0.is_phone_verified,
        u1_0.last_login,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.profile_picture_url,
        u1_0.rating_as_fulfiller,
        u1_0.rating_as_poster,
        u1_0.ratings_as_fulfiller_count,
        u1_0.ratings_as_post_count,
        u1_0.theme,
        u1_0.updated_at 
    from
        user_profiles up1_0 
    join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        up1_0.user_id=?
2025-08-05 12:29:00 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /tasks/search?keyword=grocery
2025-08-05 12:29:00 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        t1_0.id,
        t1_0.accepted_at,
        t1_0.address_details,
        t1_0.category,
        t1_0.completed_at,
        t1_0.confirmed_at,
        t1_0.created_at,
        t1_0.deadline,
        t1_0.description,
        t1_0.estimated_duration_hours,
        t1_0.fulfiller_id,
        t1_0.is_urgent,
        t1_0.latitude,
        t1_0.location,
        t1_0.longitude,
        t1_0.poster_id,
        t1_0.price,
        t1_0.pricing_type,
        t1_0.requires_verification,
        t1_0.special_instructions,
        t1_0.started_at,
        t1_0.status,
        t1_0.title,
        t1_0.updated_at 
    from
        tasks t1_0 
    where
        t1_0.status=?
2025-08-05 12:29:00 [http-nio-8080-exec-3] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Could not initialize proxy [com.zephyros.urbanup.model.User#15] - no session]
2025-08-05 12:29:00 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error?keyword=grocery
2025-08-05 12:29:00 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error?keyword=grocery
2025-08-05 12:29:00 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
